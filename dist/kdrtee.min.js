(function(t,e){typeof exports==="object"&&typeof module!=="undefined"?module.exports=e():typeof define==="function"&&define.amd?define(e):t.KDTree=e()})(this,function(){"use strict";var t=function t(e){this.content=[];this.scoreFunction=e};t.prototype.push=function t(e){this.content.push(e);this.bubbleUp(this.content.length-1)};t.prototype.pop=function t(){var e=this.content;var i=e[0];var n=e.pop();if(e.length>0){e[0]=n;this.sinkDown(0)}return i};t.prototype.peek=function t(){return this.content[0]};t.prototype.remove=function t(e){var i=this;var n=this.content.length;var r=this.scoreFunction;var o=this.content;for(var a=0;a<n;a++){if(o[a]===e){var l=o.pop();if(a!==n-1){o[a]=l;if(r(l)<r(e)){i.bubbleUp(a)}else{i.sinkDown(a)}}return}}throw new Error("Node not found.")};t.prototype.size=function t(){return this.content.length};t.prototype.bubbleUp=function t(e){var i=this.content;var n=this.scoreFunction;var r=i[e];while(e>0){var o=Math.floor((e+1)/2)-1;var a=i[o];if(n(r)<n(a)){i[o]=r;i[e]=a;e=o}else{break}}};t.prototype.sinkDown=function t(e){var i=this;var n=this.content;var r=this.scoreFunction;var o=n.length;var a=n[e];var l=r(a);while(true){var s=(e+1)*2;var f=s-1;var h=null;var u=void 0,p=void 0;if(f<o){u=r(n[f]);if(u<l){h=f}}if(s<o){p=r(i.content[s]);if(p<(h===null?l:u)){h=s}}if(h){n[e]=n[h];n[h]=a;e=h}else{break}}};function e(t,e,i){if(t.length<=e){throw new Error("Wrong input")}var n=0,r=t.length-1;while(n<r){var o=n,a=r;var l=t[Math.floor((o+a)/2)];while(o<a){if(t[o][i]>=l[i]){var s=t[a];t[a]=t[o];t[o]=s;a--}else{o++}}if(t[o][i]>l[i]){o--}if(e<=o){r=o}else{n=o+1}}return t[e]}function i(t,e,i){if(i===void 0)i=null;return{data:t,parent:i,dimension:e,left:null,right:null}}var n=function t(e,i,n){this.dimensions=n;var r=[];for(var o=0,a=n.length;o<a;o++){var l=n[o];r.push(function(t,e){return t[l]-e[l]})}this._sorters=r;this.metric=i;this.root=null;if(e){if(Array.isArray(e)&&e.length>0){this.load(e)}else if(e.dimension){this.loadTree(e)}}};n.prototype.load=function t(e){this.root=this.buildTree(e,0,this.root)};n.prototype.buildTree=function t(n,r,o){var a=this.dimensions.length;var l=this._sorters;if(o===null){o=this.root=i(null,r%a,null)}var s=[o],f;var h=[n];while(f=s.pop()){var u=h.pop();var p=u.length;if(p===1){f.data=u[0]}else{var v=Math.floor(p/2);var d=f.dimension;var c=d%a;f.data=e(u,v,c);if(v<p-1){h.push(u.slice(v+1));f.right=i(null,d+1,f);s.push(f.right)}if(v>0){h.push(u.slice(0,v));f.left=i(null,d+1,f);s.push(f.left)}}}return o};n.prototype.loadTree=function t(e){var i=e;var n=[i],r;while(r=n.pop()){if(r.left){r.left.parent=r;n.push(r.left)}if(r.right){r.right.parent=r;n.push(r.right)}}this.root=i;return this};n.prototype.toJSON=function t(e){if(!e){e=this.root}var n=i(e.data,e.dimension,null);if(e.left){n.left=this.toJSON(e.left)}if(e.right){n.right=this.toJSON(e.right)}return n};n.prototype._findNode=function t(e){var i=[this.root],n=null,r;while(i.length!==0){n=i.pop();r=n.dimension;if(e[r]<n.data[r]&&n.left){i.push(n.left)}else if(n.right){i.push(n.right)}}return n};n.prototype.insert=function t(e){var n=this.dimensions;if(this.root===null){this.root=i(e,0,null);return this.root}var r=this._findNode(e);var o=r.dimension;var a=i(e,(o+1)%n.length,r);var l=n[o];if(e[l]<r.data[l]){r.left=a}else{r.right=a}return a};n.prototype.findMin=function t(e,i){if(e===null){return null}var n=this.dimensions[i];if(e.dimension===i){if(e.left){return this.findMin(e.left,i)}return e}var r=e.data[n];var o=this.findMin(e.left,i);var a=this.findMin(e.right,i);var l=e;if(o!==null&&o.data[n]<r){l=o}if(a!==null&&a.data[n]<l.data[n]){l=a}return l};n.prototype.removeNode=function t(e){var i,n;if(e.left===null&&e.right===null){if(e.parent===null){this.root=null;return}var r=dimensions[e.parent.dimension];if(e.data[r]<e.parent.data[r]){e.parent.left=null}else{e.parent.right=null}return}if(e.right!==null){i=this.findMin(e.right,e.dimension);n=i.data;this.removeNode(i);e.data=n}else{i=this.findMin(e.left,e.dimension);n=i.data;this.removeNode(i);e.right=e.left;e.left=null;e.data=n}};n.prototype.remove=function t(e){var i=this._findNode(e);if(i){this.removeNode(i)}return e};n.saveNode=function t(e,i,n,r){n.push([e,i]);if(n.size()>r){n.pop()}};n.prototype.nearestSearch=function t(e,i,r,o){var a;var l=this.dimensions;var s=l[e.dimension];var f=this.metric(i,e.data);var h=[];var u,p,v;for(var d=0,c=l.length;d<c;d++){v=l[d];if(d===e.dimension){h[v]=i[v]}else{h[v]=e.data[v]}}var g=this.metric(h,e.data);if(e.right===null&&e.left===null){if(r.size()<o||f<r.peek()[1]){n.saveNode(e,f,r,o)}return}if(e.right===null){a=e.left}else if(e.left===null){a=e.right}else{if(i[s]<e.data[s]){a=e.left}else{a=e.right}}this.nearestSearch(a,i,r,o);if(r.size()<o||f<r.peek()[1]){n.saveNode(e,f,r,o)}if(r.size()<o||Math.abs(g)<r.peek()[1]){if(a===e.left){u=e.right}else{u=e.left}if(u!==null){this.nearestSearch(u,i,r,o)}}};n.prototype.nearest=function e(i,n,r){if(n===void 0)n=1;if(r===void 0)r=0;var o=new t(function(t){return-t[1]});if(r){for(var a=0;a<n;a++){o.push([null,r])}}if(this.root){this.nearestSearch(this.root,i,o,n)}var l=[],s=o.content;for(var f=0,h=Math.min(n,s.length);f<h;f++){if(s[f][0]){l.push([s[f][0].data,s[f][1]])}}return l};n.prototype.balanceFactor=function t(){function e(t){if(t===null){return 0}return Math.max(e(t.left),e(t.right))+1}function i(t){if(t===null){return 0}return i(t.left)+i(t.right)+1}return e(this.root)/(Math.log(i(this.root))/Math.log(2))};return n});
